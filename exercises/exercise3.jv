pipeline GoodsPipeline {

    GoodsExtractor
        -> GoodsTextFileInterpreter
        -> GoodsCSVInterpreter 
        -> MetaDataRowDeleter
        -> ColumnDeleter
        -> HeaderWriterForFirstColumns
        -> HeaderWriterForQuantityColumns
        -> GoodsTableInterpreter
        -> GoodsLoader;

    block GoodsExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block GoodsTextFileInterpreter oftype TextFileInterpreter {
        encoding: "latin4";
    }

    block GoodsCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block MetaDataRowDeleter oftype RowDeleter {
        delete: [row 0, row 1, row 2, row 3, row 4, row 5, row 6, row 7];
    }

    block ColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I, column J, column K, column L, column M, column N, column O, column P, column Q, column R, column S, column T, column U, column V, column W, column X, column Y, column Z, column AA, column AB, column AC, column AD, column AE, column AF, column AG, column AH, column AI, column AJ, column AK, column AL, column AM, column AN, column AO, column AP, column AQ, column AR, column AS];
    }

    block HeaderWriterForFirstColumns oftype CellWriter {
        at: range A1:E1;
        write: ["year", "month", "goods_id", "goods_name", "goods_source"];
    }

    block HeaderWriterForQuantityColumns oftype CellWriter {
        at: range F1:G1;
        write: ["abroad", "total"];
    }

    valuetype GermanMonth oftype text {
        constraints: [GermanMonthList];
    }

    constraint GermanMonthList oftype AllowlistConstraint {
        allowlist: ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"];
    }

    valuetype GoodsID oftype text {
        constraints: [GoodsIDType];
    }

    constraint GoodsIDType oftype RegexConstraint {
        regex: /^NST7-[A-Z0-9]{3}$/;
    }

    valuetype PositiveInteger oftype integer {
        constraints: [PositiveDataType];
    }

    constraint PositiveDataType oftype RangeConstraint {
        lowerBound: 0;
    }

    block GoodsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype PositiveInteger,
            "month" oftype GermanMonth,
            "goods_id" oftype GoodsID,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype PositiveInteger,
            "total" oftype PositiveInteger,
        ];
    }


    block GoodsLoader oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }
}
